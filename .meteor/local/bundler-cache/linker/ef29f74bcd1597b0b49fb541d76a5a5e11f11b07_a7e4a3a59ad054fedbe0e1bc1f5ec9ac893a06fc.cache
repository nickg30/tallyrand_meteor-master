[{"type":"js","data":"/* Imports for global scope */\n\nMongoInternals = Package.mongo.MongoInternals;\nMongo = Package.mongo.Mongo;\nTracker = Package.tracker.Tracker;\nDeps = Package.tracker.Deps;\nReactiveVar = Package['reactive-var'].ReactiveVar;\nmeteorBabelHelpers = Package['babel-runtime'].meteorBabelHelpers;\nECMAScript = Package.ecmascript.ECMAScript;\nFlowRouter = Package['kadira:flow-router'].FlowRouter;\nBlazeLayout = Package['kadira:blaze-layout'].BlazeLayout;\nlodash = Package['erasaur:meteor-lodash'].lodash;\n_ = Package.underscore._;\nSpiderable = Package.spiderable.Spiderable;\nHelpers = Package['raix:handlebar-helpers'].Helpers;\nActiveRoute = Package['zimme:active-route'].ActiveRoute;\ncheck = Package.check.check;\nMatch = Package.check.Match;\nAccounts = Package['accounts-base'].Accounts;\nMeteor = Package.meteor.Meteor;\nglobal = Package.meteor.global;\nmeteorEnv = Package.meteor.meteorEnv;\nWebApp = Package.webapp.WebApp;\nWebAppInternals = Package.webapp.WebAppInternals;\nmain = Package.webapp.main;\nDDP = Package['ddp-client'].DDP;\nDDPServer = Package['ddp-server'].DDPServer;\nLaunchScreen = Package['launch-screen'].LaunchScreen;\nBlaze = Package.ui.Blaze;\nUI = Package.ui.UI;\nHandlebars = Package.ui.Handlebars;\nSpacebars = Package.spacebars.Spacebars;\nmeteorInstall = Package.modules.meteorInstall;\nPromise = Package.promise.Promise;\nCollection2 = Package['aldeed:collection2-core'].Collection2;\nSimpleSchema = Package['aldeed:simple-schema'].SimpleSchema;\nMongoObject = Package['aldeed:simple-schema'].MongoObject;\nAutoupdate = Package.autoupdate.Autoupdate;\nHTML = Package.htmljs.HTML;\nSymbol = Package['ecmascript-runtime-server'].Symbol;\nMap = Package['ecmascript-runtime-server'].Map;\nSet = Package['ecmascript-runtime-server'].Set;\n\n","servePath":"/packages/global-imports.js"},{"type":"js","data":"var require = meteorInstall({\"lib\":{\"routes.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// lib/routes.js                                                                                              //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nif (Meteor.isClient) {                                                                                        // 1\n\tAccounts.onLogin(function () {                                                                               // 2\n\t\tFlowRouter.go('admin-menu');                                                                                // 3\n\t});                                                                                                          // 4\n\tAccounts.onLogout(function () {                                                                              // 6\n\t\tFlowRouter.go('home');                                                                                      // 7\n\t});                                                                                                          // 8\n} // FlowRouter.triggers.enter([function(context, redirect){                                                  // 9\n// \tif(!Meteor.userId()) {                                                                                    // 11\n// \t\tFlowRouter.go('home');                                                                                   // 12\n// \t}                                                                                                         // 13\n// }]);                                                                                                       // 14\n                                                                                                              //\n                                                                                                              //\nFlowRouter.route('/', {                                                                                       // 16\n\tname: 'home',                                                                                                // 17\n\taction: function () {                                                                                        // 18\n\t\tif (Meteor.userId()) {                                                                                      // 19\n\t\t\tFlowRouter.go('/');                                                                                        // 20\n\t\t}                                                                                                           // 21\n                                                                                                              //\n\t\tGAnalytics.pageview();                                                                                      // 22\n\t\tBlazeLayout.render('HomeLayout', {                                                                          // 23\n\t\t\tmain: 'FrontPage'                                                                                          // 23\n\t\t});                                                                                                         // 23\n\t}                                                                                                            // 24\n});                                                                                                           // 16\nFlowRouter.route('/appetizers', {                                                                             // 27\n\tname: 'appetizers',                                                                                          // 28\n\taction: function () {                                                                                        // 29\n\t\tGAnalytics.pageview();                                                                                      // 30\n\t\tBlazeLayout.render('HomeLayout', {                                                                          // 31\n\t\t\tmain: 'Appetizers'                                                                                         // 31\n\t\t});                                                                                                         // 31\n\t}                                                                                                            // 32\n});                                                                                                           // 27\nFlowRouter.route('/profile', {                                                                                // 35\n\tname: 'profile',                                                                                             // 36\n\taction: function () {                                                                                        // 37\n\t\tif (Meteor.userId()) {                                                                                      // 38\n\t\t\tFlowRouter.go('profile');                                                                                  // 39\n\t\t}                                                                                                           // 40\n                                                                                                              //\n\t\tGAnalytics.pageview();                                                                                      // 41\n\t\tBlazeLayout.render('MainLayout');                                                                           // 42\n\t}                                                                                                            // 43\n});                                                                                                           // 35\nFlowRouter.route('/admin-apps', {                                                                             // 46\n\tname: 'admin-apps',                                                                                          // 47\n\taction: function () {                                                                                        // 48\n\t\tif (Meteor.userId()) {                                                                                      // 49\n\t\t\tFlowRouter.go('admin-apps');                                                                               // 50\n\t\t}                                                                                                           // 51\n                                                                                                              //\n\t\tGAnalytics.pageview();                                                                                      // 52\n\t\tBlazeLayout.render('MainLayout', {                                                                          // 53\n\t\t\tmain: 'Apps'                                                                                               // 53\n\t\t});                                                                                                         // 53\n\t}                                                                                                            // 54\n}); // SUPPORT                                                                                                // 46\n                                                                                                              //\nFlowRouter.route('/support', {                                                                                // 57\n\tname: 'support',                                                                                             // 58\n\taction: function () {                                                                                        // 59\n\t\tif (Meteor.userId()) {                                                                                      // 60\n\t\t\tFlowRouter.go('support');                                                                                  // 61\n\t\t}                                                                                                           // 62\n                                                                                                              //\n\t\tGAnalytics.pageview();                                                                                      // 63\n\t\tBlazeLayout.render('MainLayout', {                                                                          // 64\n\t\t\tmain: 'Support'                                                                                            // 64\n\t\t});                                                                                                         // 64\n\t}                                                                                                            // 65\n});                                                                                                           // 57\nFlowRouter.route('/basic-info', {                                                                             // 68\n\tname: 'basic-info',                                                                                          // 69\n\taction: function () {                                                                                        // 70\n\t\tif (Meteor.userId()) {                                                                                      // 71\n\t\t\tFlowRouter.go('basic-info');                                                                               // 72\n\t\t}                                                                                                           // 73\n                                                                                                              //\n\t\tGAnalytics.pageview();                                                                                      // 74\n\t\tBlazeLayout.render('MainLayout', {                                                                          // 75\n\t\t\tmain: 'BasicInfo'                                                                                          // 75\n\t\t});                                                                                                         // 75\n\t}                                                                                                            // 76\n});                                                                                                           // 68\nFlowRouter.route('/recipe/:id', {                                                                             // 79\n\tname: 'recipe',                                                                                              // 80\n\taction: function () {                                                                                        // 81\n\t\tGAnalytics.pageview();                                                                                      // 82\n\t\tBlazeLayout.render('MainLayout', {                                                                          // 83\n\t\t\tmain: 'RecipeSingle'                                                                                       // 83\n\t\t});                                                                                                         // 83\n\t}                                                                                                            // 84\n});                                                                                                           // 79\nFlowRouter.route('/menu', {                                                                                   // 87\n\tname: 'menu',                                                                                                // 88\n\taction: function () {                                                                                        // 89\n\t\tBlazeLayout.render('MainLayout', {                                                                          // 90\n\t\t\tmain: 'Menu'                                                                                               // 90\n\t\t});                                                                                                         // 90\n\t}                                                                                                            // 91\n});                                                                                                           // 87\nFlowRouter.route('/shopping-list', {                                                                          // 94\n\tname: 'shopping-list',                                                                                       // 95\n\taction: function () {                                                                                        // 96\n\t\tBlazeLayout.render('MainLayout', {                                                                          // 97\n\t\t\tmain: 'ShoppingList'                                                                                       // 97\n\t\t});                                                                                                         // 97\n\t}                                                                                                            // 98\n});                                                                                                           // 94\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"collections\":{\"profile.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// collections/profile.js                                                                                     //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nProfile = new Mongo.Collection('profile');                                                                    // 1\nProfile.allow({                                                                                               // 3\n    insert: function (userId, doc) {                                                                          // 4\n        return !!userId;                                                                                      // 5\n    },                                                                                                        // 6\n    update: function (userId, doc) {                                                                          // 7\n        return !!userId;                                                                                      // 8\n    }                                                                                                         // 9\n}); // Price = new SimpleSchema({                                                                             // 3\n//     desc: {                                                                                                // 13\n//         type: String,                                                                                      // 14\n//         label: \"Option\",                                                                                   // 15\n//         optional: true,                                                                                    // 16\n//     },                                                                                                     // 17\n//     amount: {                                                                                              // 18\n//         label: \"Amount\",                                                                                   // 19\n//         type: String                                                                                       // 20\n//     }                                                                                                      // 21\n// });                                                                                                        // 22\n                                                                                                              //\nProfileSchema = new SimpleSchema({                                                                            // 24\n    storeNumber: {                                                                                            // 25\n        type: String,                                                                                         // 26\n        label: \"Store #\"                                                                                      // 27\n    },                                                                                                        // 25\n    businessName: {                                                                                           // 29\n        type: String,                                                                                         // 30\n        label: \"Business Name\"                                                                                // 31\n    },                                                                                                        // 29\n    phoneNumber: {                                                                                            // 33\n        type: Number,                                                                                         // 34\n        min: 10,                                                                                              // 35\n        autoform: {                                                                                           // 36\n            afFieldInput: {                                                                                   // 37\n                type: \"tel\"                                                                                   // 38\n            }                                                                                                 // 37\n        }                                                                                                     // 36\n    },                                                                                                        // 33\n    email: {                                                                                                  // 42\n        type: String,                                                                                         // 43\n        label: \"email\"                                                                                        // 44\n    },                                                                                                        // 42\n    address: {                                                                                                // 46\n        type: Object                                                                                          // 47\n    },                                                                                                        // 46\n    'address.street': {                                                                                       // 49\n        type: String                                                                                          // 50\n    },                                                                                                        // 49\n    'address.street2': {                                                                                      // 52\n        type: String,                                                                                         // 53\n        optional: true                                                                                        // 54\n    },                                                                                                        // 52\n    'address.city': {                                                                                         // 56\n        type: String                                                                                          // 57\n    },                                                                                                        // 56\n    'address.state': {                                                                                        // 59\n        type: String,                                                                                         // 60\n        allowedValues: [\"AL\", \"AK\", \"AZ\", \"AR\", \"CA\", \"CO\", \"CT\", \"DE\", \"FL\", \"GA\", \"HI\", \"ID\", \"IL\", \"IN\", \"IA\", \"KS\", \"KY\", \"LA\", \"ME\", \"MD\", \"MA\", \"MI\", \"MN\", \"MS\", \"MO\", \"MT\", \"NE\", \"NV\", \"NH\", \"NJ\", \"NM\", \"NY\", \"NC\", \"ND\", \"OH\", \"OK\", \"OR\", \"PA\", \"RI\", \"SC\", \"SD\", \"TN\", \"TX\", \"UT\", \"VT\", \"VA\", \"WA\", \"WV\", \"WI\", \"WY\"],\n        autoform: {                                                                                           // 62\n            afFieldInput: {                                                                                   // 63\n                firstOption: \"(Select a State)\"                                                               // 64\n            }                                                                                                 // 63\n        }                                                                                                     // 62\n    },                                                                                                        // 59\n    'address.postalCode': {                                                                                   // 68\n        type: String,                                                                                         // 69\n        label: \"ZIP\"                                                                                          // 70\n    },                                                                                                        // 68\n    tagline: {                                                                                                // 72\n        type: String,                                                                                         // 73\n        label: \"tagline\",                                                                                     // 74\n        autoform: {                                                                                           // 75\n            rows: 2                                                                                           // 76\n        }                                                                                                     // 75\n    },                                                                                                        // 72\n    desc: {                                                                                                   // 79\n        type: String,                                                                                         // 80\n        label: \"About\",                                                                                       // 81\n        autoform: {                                                                                           // 82\n            rows: 5                                                                                           // 83\n        }                                                                                                     // 82\n    },                                                                                                        // 79\n    author: {                                                                                                 // 86\n        type: String,                                                                                         // 87\n        label: \"Author\",                                                                                      // 88\n        autoValue: function () {                                                                              // 89\n            return this.userId;                                                                               // 90\n        },                                                                                                    // 91\n        autoform: {                                                                                           // 92\n            type: \"hidden\"                                                                                    // 93\n        }                                                                                                     // 92\n    },                                                                                                        // 86\n    createdAt: {                                                                                              // 96\n        type: Date,                                                                                           // 97\n        label: \"Created At\",                                                                                  // 98\n        autoValue: function () {                                                                              // 99\n            return new Date();                                                                                // 100\n        },                                                                                                    // 101\n        autoform: {                                                                                           // 102\n            type: \"hidden\"                                                                                    // 103\n        }                                                                                                     // 102\n    }                                                                                                         // 96\n});                                                                                                           // 24\nMeteor.methods({                                                                                              // 110\n    deleteProfile: function (id) {                                                                            // 111\n        Profile.remove(id);                                                                                   // 112\n    }                                                                                                         // 113\n});                                                                                                           // 110\nProfile.attachSchema(ProfileSchema);                                                                          // 116\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"recipes.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// collections/recipes.js                                                                                     //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nRecipes = new Mongo.Collection('recipes');                                                                    // 1\nRecipes.allow({                                                                                               // 3\n    insert: function (userId, doc) {                                                                          // 4\n        return !!userId;                                                                                      // 5\n    },                                                                                                        // 6\n    update: function (userId, doc) {                                                                          // 7\n        return !!userId;                                                                                      // 8\n    }                                                                                                         // 9\n});                                                                                                           // 3\nPrice = new SimpleSchema({                                                                                    // 12\n    desc: {                                                                                                   // 13\n        type: String,                                                                                         // 14\n        label: \"Option\",                                                                                      // 15\n        optional: true                                                                                        // 16\n    },                                                                                                        // 13\n    amount: {                                                                                                 // 18\n        label: \"Amount\",                                                                                      // 19\n        type: String                                                                                          // 20\n    }                                                                                                         // 18\n});                                                                                                           // 12\nRecipeSchema = new SimpleSchema({                                                                             // 24\n    name: {                                                                                                   // 25\n        type: String,                                                                                         // 26\n        label: \"Name\"                                                                                         // 27\n    },                                                                                                        // 25\n    desc: {                                                                                                   // 29\n        type: String,                                                                                         // 30\n        label: \"Description\",                                                                                 // 31\n        optional: true                                                                                        // 32\n    },                                                                                                        // 29\n    price: {                                                                                                  // 34\n        type: String,                                                                                         // 35\n        label: \"Price\"                                                                                        // 36\n    },                                                                                                        // 34\n    // Price: {                                                                                               // 39\n    //     type: [Price]                                                                                      // 40\n    // },                                                                                                     // 41\n    category: {                                                                                               // 42\n        type: String,                                                                                         // 43\n        label: \"Category\",                                                                                    // 44\n        allowedValues: [\"Appetizers\", \"Breakfast\", \"Soups/Salads\", \"Lunch/Dinner\", \"From the Bar\", \"Dessert\"]\n    },                                                                                                        // 42\n    column: {                                                                                                 // 54\n        type: Number,                                                                                         // 55\n        label: \"Column\",                                                                                      // 56\n        allowedValues: [1, 2, 3]                                                                              // 57\n    },                                                                                                        // 54\n    position: {                                                                                               // 63\n        type: Number,                                                                                         // 64\n        label: \"position\",                                                                                    // 65\n        allowedValues: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]                                                        // 66\n    },                                                                                                        // 63\n    special: {                                                                                                // 79\n        type: Boolean,                                                                                        // 80\n        label: \"Special\",                                                                                     // 81\n        defaultValue: false,                                                                                  // 82\n        label: \"Special Item\"                                                                                 // 83\n    },                                                                                                        // 79\n    inMenu: {                                                                                                 // 85\n        type: Boolean,                                                                                        // 86\n        defaultValue: false,                                                                                  // 87\n        optional: true,                                                                                       // 88\n        autoform: {                                                                                           // 89\n            type: \"hidden\"                                                                                    // 90\n        }                                                                                                     // 89\n    },                                                                                                        // 85\n    author: {                                                                                                 // 93\n        type: String,                                                                                         // 94\n        label: \"Author\",                                                                                      // 95\n        autoValue: function () {                                                                              // 96\n            return this.userId;                                                                               // 97\n        },                                                                                                    // 98\n        autoform: {                                                                                           // 99\n            type: \"hidden\"                                                                                    // 100\n        }                                                                                                     // 99\n    },                                                                                                        // 93\n    createdAt: {                                                                                              // 103\n        type: Date,                                                                                           // 104\n        label: \"Created At\",                                                                                  // 105\n        autoValue: function () {                                                                              // 106\n            return new Date();                                                                                // 107\n        },                                                                                                    // 108\n        autoform: {                                                                                           // 109\n            type: \"hidden\"                                                                                    // 110\n        }                                                                                                     // 109\n    }                                                                                                         // 103\n});                                                                                                           // 24\nMeteor.methods({                                                                                              // 117\n    toggleMenuItem: function (id, currentState) {                                                             // 118\n        Recipes.update(id, {                                                                                  // 119\n            $set: {                                                                                           // 120\n                inMenu: !currentState                                                                         // 121\n            }                                                                                                 // 120\n        });                                                                                                   // 119\n    },                                                                                                        // 124\n    deleteRecipe: function (id) {                                                                             // 125\n        Recipes.remove(id);                                                                                   // 126\n    }                                                                                                         // 127\n});                                                                                                           // 117\nRecipes.attachSchema(RecipeSchema);                                                                           // 130\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"server\":{\"init.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/init.js                                                                                             //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nMeteor.startup(function () {});                                                                               // 1\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n},\"publish.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// server/publish.js                                                                                          //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nMeteor.publish('recipes', function () {                                                                       // 1\n\treturn Recipes.find({});                                                                                     // 2\n});                                                                                                           // 3\nMeteor.publish('SingleRecipe', function (id) {                                                                // 5\n\tcheck(id, String);                                                                                           // 6\n\treturn Recipes.find({                                                                                        // 7\n\t\t_id: id                                                                                                     // 7\n\t});                                                                                                          // 7\n}); // PROFILE                                                                                                // 8\n                                                                                                              //\nMeteor.publish('profile', function () {                                                                       // 10\n\treturn Profile.find({});                                                                                     // 11\n});                                                                                                           // 12\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},\"intermediate.js\":function(){\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n//                                                                                                            //\n// intermediate.js                                                                                            //\n//                                                                                                            //\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n                                                                                                              //\nif (Meteor.isServer) {                                                                                        // 1\n  Meteor.startup(function () {// code to run on server at startup                                             // 2\n  });                                                                                                         // 4\n}                                                                                                             // 5\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n}},{\n  \"extensions\": [\n    \".js\",\n    \".json\"\n  ]\n});\nrequire(\"./lib/routes.js\");\nrequire(\"./collections/profile.js\");\nrequire(\"./collections/recipes.js\");\nrequire(\"./server/init.js\");\nrequire(\"./server/publish.js\");\nrequire(\"./intermediate.js\");","servePath":"/app.js","sourceMap":{"version":3,"sources":["lib/routes.js","collections/profile.js","collections/recipes.js","server/init.js","server/publish.js","intermediate.js"],"names":["Meteor","isClient","Accounts","onLogin","FlowRouter","go","onLogout","route","name","action","userId","GAnalytics","pageview","BlazeLayout","render","main","Profile","Mongo","Collection","allow","insert","doc","update","ProfileSchema","SimpleSchema","storeNumber","type","String","label","businessName","phoneNumber","Number","min","autoform","afFieldInput","email","address","Object","optional","allowedValues","firstOption","tagline","rows","desc","author","autoValue","createdAt","Date","methods","deleteProfile","id","remove","attachSchema","Recipes","Price","amount","RecipeSchema","price","category","column","position","special","Boolean","defaultValue","inMenu","toggleMenuItem","currentState","$set","deleteRecipe","startup","publish","find","check","_id","isServer"],"mappings":"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","file":"/app.js","sourcesContent":["if(Meteor.isClient){\n\tAccounts.onLogin(function(){\n\t\tFlowRouter.go('admin-menu');\n\t});\n\n\tAccounts.onLogout(function(){\n\t\tFlowRouter.go('home');\n\t});\n}\n// FlowRouter.triggers.enter([function(context, redirect){\n// \tif(!Meteor.userId()) {\n// \t\tFlowRouter.go('home');\n// \t}\n// }]);\n\nFlowRouter.route('/', {\n\tname: 'home',\n\taction() {\n\t\tif(Meteor.userId()) {\n\t\t\tFlowRouter.go('/');\n\t\t}\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('HomeLayout', {main: 'FrontPage'});\n\t}\n});\n\nFlowRouter.route('/appetizers', {\n\tname: 'appetizers',\n\taction() {\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('HomeLayout', {main: 'Appetizers'});\n\t}\n});\n\nFlowRouter.route('/profile', {\n\tname: 'profile',\n\taction() {\n\t\tif(Meteor.userId()) {\n\t\t\tFlowRouter.go('profile');\n\t\t}\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('MainLayout');\n\t}\n});\n\nFlowRouter.route('/admin-apps', {\n\tname: 'admin-apps',\n\taction() {\n\t\tif(Meteor.userId()){\n\t\t\tFlowRouter.go('admin-apps');\n\t\t}\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('MainLayout', {main: 'Apps'});\n\t}\n});\n// SUPPORT\nFlowRouter.route('/support', {\n\tname: 'support',\n\taction() {\n\t\tif(Meteor.userId()){\n\t\t\tFlowRouter.go('support');\n\t\t}\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('MainLayout', {main: 'Support'});\n\t}\n});\n\nFlowRouter.route('/basic-info', {\n\tname: 'basic-info',\n\taction() {\n\t\tif(Meteor.userId()){\n\t\t\tFlowRouter.go('basic-info');\n\t\t}\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('MainLayout', {main: 'BasicInfo'});\n\t}\n});\n\nFlowRouter.route('/recipe/:id', {\n\tname: 'recipe',\n\taction() {\n\t\tGAnalytics.pageview();\n\t\tBlazeLayout.render('MainLayout', {main: 'RecipeSingle'});\n\t}\n});\n\nFlowRouter.route('/menu', {\n\tname: 'menu',\n\taction() {\n\t\tBlazeLayout.render('MainLayout', {main: 'Menu'});\n\t}\n});\n\nFlowRouter.route('/shopping-list', {\n\tname: 'shopping-list',\n\taction() {\n\t\tBlazeLayout.render('MainLayout', {main: 'ShoppingList'});\n\t}\n});","Profile = new Mongo.Collection('profile');\n\nProfile.allow({\n\tinsert: function(userId, doc) {\n\t\treturn !!userId;\n\t},\n\tupdate: function(userId, doc) {\n\t\treturn !!userId;\n\t}\n});\n\n// Price = new SimpleSchema({\n//     desc: {\n//         type: String,\n//         label: \"Option\",\n//         optional: true,\n//     },\n//     amount: {\n//         label: \"Amount\",\n//         type: String\n//     }\n// });\n\nProfileSchema =  new SimpleSchema({\n    storeNumber: {\n        type: String,\n        label: \"Store #\"\n    },\n    businessName: {\n        type: String,\n        label: \"Business Name\"\n    },\n    phoneNumber: {\n        type: Number,\n        min: 10,\n        autoform: {\n          afFieldInput: {\n            type: \"tel\"\n          }\n        }\n    },\n    email: {\n        type: String,\n        label: \"email\"\n    },\n    address: {\n        type: Object\n      },\n      'address.street': {\n        type: String\n    },\n      'address.street2': {\n        type: String,\n        optional: true\n    },\n      'address.city': {\n        type: String\n    },\n    'address.state': {\n        type: String,\n        allowedValues: [\"AL\",\"AK\",\"AZ\",\"AR\",\"CA\",\"CO\",\"CT\",\"DE\",\"FL\",\"GA\",\"HI\",\"ID\",\"IL\",\"IN\",\"IA\",\"KS\",\"KY\",\"LA\",\"ME\",\"MD\",\"MA\",\"MI\",\"MN\",\"MS\",\"MO\",\"MT\",\"NE\",\"NV\",\"NH\",\"NJ\",\"NM\",\"NY\",\"NC\",\"ND\",\"OH\",\"OK\",\"OR\",\"PA\",\"RI\",\"SC\",\"SD\",\"TN\",\"TX\",\"UT\",\"VT\",\"VA\",\"WA\",\"WV\",\"WI\",\"WY\"],\n        autoform: {\n          afFieldInput: {\n            firstOption: \"(Select a State)\"\n          }\n        }\n    },\n    'address.postalCode': {\n        type: String,\n        label: \"ZIP\"\n    },\n    tagline: {\n        type: String,\n        label: \"tagline\",\n        autoform: {\n            rows: 2\n         }\n    },\n    desc: {\n        type: String,\n        label: \"About\",\n        autoform: {\n            rows: 5\n         }\n    },\n    author: {\n        type: String,\n        label: \"Author\",\n        autoValue: function() {\n            return this.userId;\n        },\n        autoform: {\n            type: \"hidden\"\n        }\n    },\n    createdAt: {\n        type: Date,\n        label: \"Created At\",\n        autoValue: function() {\n            return new Date();\n        },\n        autoform: {\n            type: \"hidden\"\n        }\n        \n    }\n});\n\n\nMeteor.methods({\n\tdeleteProfile: function(id){\n\t\tProfile.remove(id);\n\t}\n});\n\nProfile.attachSchema(ProfileSchema);","Recipes = new Mongo.Collection('recipes');\n\nRecipes.allow({\n\tinsert: function(userId, doc) {\n\t\treturn !!userId;\n\t},\n\tupdate: function(userId, doc) {\n\t\treturn !!userId;\n\t}\n});\n\nPrice = new SimpleSchema({\n    desc: {\n        type: String,\n        label: \"Option\",\n        optional: true,\n    },\n    amount: {\n        label: \"Amount\",\n        type: String\n    }\n});\n\nRecipeSchema =  new SimpleSchema({\n    name: {\n        type: String,\n        label: \"Name\"\n    },\n    desc: {\n        type: String,\n        label: \"Description\",\n        optional: true\n    },\n    price: {\n        type: String,\n        label: \"Price\",\n        \n    },\n    // Price: {\n    //     type: [Price]\n    // },\n    category: {\n        type: String,\n        label: \"Category\",\n        allowedValues: [\n            \"Appetizers\",\n            \"Breakfast\",\n            \"Soups/Salads\",\n            \"Lunch/Dinner\",\n            \"From the Bar\",\n            \"Dessert\"\n        ]\n    },\n    column: {\n        type: Number,\n        label: \"Column\",\n        allowedValues: [\n            1,\n            2,\n            3\n        ]\n    },\n    position: {\n        type: Number,\n        label: \"position\",\n        allowedValues: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        ]\n    },\n    special: {\n        type: Boolean,\n        label: \"Special\",\n        defaultValue: false,\n        label: \"Special Item\"\n    },\n    inMenu: {\n        type: Boolean,\n        defaultValue: false,\n        optional: true,\n        autoform: {\n            type: \"hidden\"\n        }\n    },\n    author: {\n        type: String,\n        label: \"Author\",\n        autoValue: function() {\n            return this.userId;\n        },\n        autoform: {\n            type: \"hidden\"\n        }\n    },\n    createdAt: {\n        type: Date,\n        label: \"Created At\",\n        autoValue: function() {\n            return new Date();\n        },\n        autoform: {\n            type: \"hidden\"\n        }\n        \n    }\n});\n\n\nMeteor.methods({\n\ttoggleMenuItem: function(id, currentState){\n\t\tRecipes.update(id, {\n\t\t\t$set: {\n\t\t\t\tinMenu: !currentState\n\t\t\t}\n\t\t});\n\t},\n\tdeleteRecipe: function(id){\n\t\tRecipes.remove(id);\n\t}\n});\n\nRecipes.attachSchema(RecipeSchema);","Meteor.startup(function () {\n});","Meteor.publish('recipes', function(){\n\treturn Recipes.find({});\n});\n\nMeteor.publish('SingleRecipe', function(id){\n\tcheck(id, String);\n\treturn Recipes.find({_id: id});\n});\n// PROFILE\nMeteor.publish('profile', function(){\n\treturn Profile.find({});\n});\n","if (Meteor.isServer) {\n  Meteor.startup(function () {\n    // code to run on server at startup\n  });\n}\n"]}}]