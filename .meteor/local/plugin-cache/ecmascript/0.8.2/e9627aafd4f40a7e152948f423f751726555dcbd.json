{"metadata":{"usedHelpers":[],"marked":[],"modules":{"imports":[],"exports":{"exported":[],"specifiers":[]}}},"options":{"filename":"collections/recipes.js","filenameRelative":"collections/recipes.js","env":{"development":{"plugins":[]}},"retainLines":false,"highlightCode":true,"suppressDeprecationMessages":false,"presets":[],"plugins":[[[],{"generateLetDeclarations":true,"enforceStrictMode":false}],[[],null],[[],{"polyfill":false}],[[],null],[[],null],[[],null],[[],{"allowTopLevelThis":true,"strict":false,"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],{"loose":true}],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],{"loose":true}],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null],[[],null]],"ignore":[],"code":true,"metadata":true,"ast":true,"comments":true,"compact":false,"minified":false,"sourceMap":true,"sourceMaps":true,"sourceMapTarget":"collections/recipes.js.map","sourceFileName":"collections/recipes.js","babelrc":false,"sourceType":"module","moduleIds":false,"passPerPreset":false,"parserOpts":false,"generatorOpts":false,"basename":"recipes"},"ignored":false,"code":"Recipes = new Mongo.Collection('recipes');\nRecipes.allow({\n    insert: function (userId, doc) {\n        return !!userId;\n    },\n    update: function (userId, doc) {\n        return !!userId;\n    }\n});\nPrice = new SimpleSchema({\n    desc: {\n        type: String,\n        label: \"Option\",\n        optional: true\n    },\n    amount: {\n        label: \"Amount\",\n        type: String\n    }\n});\nRecipeSchema = new SimpleSchema({\n    name: {\n        type: String,\n        label: \"Name\"\n    },\n    desc: {\n        type: String,\n        label: \"Description\"\n    },\n    price: {\n        type: String,\n        label: \"Price\"\n    },\n    // Price: {\n    //     type: [Price]\n    // },\n    category: {\n        type: String,\n        label: \"Category\",\n        allowedValues: [\"Island Cuisine\", \"Caribbean Specialties\", \"Special Burritos\", \"Seafood Specialties\", \"Specialties Salads & Side Orders\", \"Beverages\"]\n    },\n    column: {\n        type: Number,\n        label: \"Column\",\n        allowedValues: [1, 2, 3]\n    },\n    position: {\n        type: Number,\n        label: \"position\",\n        allowedValues: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    },\n    special: {\n        type: Boolean,\n        label: \"Special\",\n        defaultValue: false,\n        label: \"Special Item\"\n    },\n    inMenu: {\n        type: Boolean,\n        defaultValue: false,\n        optional: true,\n        autoform: {\n            type: \"hidden\"\n        }\n    },\n    author: {\n        type: String,\n        label: \"Author\",\n        autoValue: function () {\n            return this.userId;\n        },\n        autoform: {\n            type: \"hidden\"\n        }\n    },\n    createdAt: {\n        type: Date,\n        label: \"Created At\",\n        autoValue: function () {\n            return new Date();\n        },\n        autoform: {\n            type: \"hidden\"\n        }\n    }\n});\nMeteor.methods({\n    toggleMenuItem: function (id, currentState) {\n        Recipes.update(id, {\n            $set: {\n                inMenu: !currentState\n            }\n        });\n    },\n    deleteRecipe: function (id) {\n        Recipes.remove(id);\n    }\n});\nRecipes.attachSchema(RecipeSchema);","map":{"version":3,"sources":["collections/recipes.js"],"names":["Recipes","Mongo","Collection","allow","insert","userId","doc","update","Price","SimpleSchema","desc","type","String","label","optional","amount","RecipeSchema","name","price","category","allowedValues","column","Number","position","special","Boolean","defaultValue","inMenu","autoform","author","autoValue","createdAt","Date","Meteor","methods","toggleMenuItem","id","currentState","$set","deleteRecipe","remove","attachSchema"],"mappings":"AAAAA,UAAU,IAAIC,MAAMC,UAAV,CAAqB,SAArB,CAAV;AAEAF,QAAQG,KAAR,CAAc;AACbC,YAAQ,UAASC,MAAT,EAAiBC,GAAjB,EAAsB;AAC7B,eAAO,CAAC,CAACD,MAAT;AACA,KAHY;AAIbE,YAAQ,UAASF,MAAT,EAAiBC,GAAjB,EAAsB;AAC7B,eAAO,CAAC,CAACD,MAAT;AACA;AANY,CAAd;AASAG,QAAQ,IAAIC,YAAJ,CAAiB;AACrBC,UAAM;AACFC,cAAMC,MADJ;AAEFC,eAAO,QAFL;AAGFC,kBAAU;AAHR,KADe;AAMrBC,YAAQ;AACJF,eAAO,QADH;AAEJF,cAAMC;AAFF;AANa,CAAjB,CAAR;AAYAI,eAAgB,IAAIP,YAAJ,CAAiB;AAC7BQ,UAAM;AACFN,cAAMC,MADJ;AAEFC,eAAO;AAFL,KADuB;AAK7BH,UAAM;AACFC,cAAMC,MADJ;AAEFC,eAAO;AAFL,KALuB;AAS7BK,WAAO;AACHP,cAAMC,MADH;AAEHC,eAAO;AAFJ,KATsB;AAc7B;AACA;AACA;AACAM,cAAU;AACNR,cAAMC,MADA;AAENC,eAAO,UAFD;AAGNO,uBAAe,CACX,gBADW,EAEX,uBAFW,EAGX,kBAHW,EAIX,qBAJW,EAKX,kCALW,EAMX,WANW;AAHT,KAjBmB;AA6B7BC,YAAQ;AACJV,cAAMW,MADF;AAEJT,eAAO,QAFH;AAGJO,uBAAe,CACX,CADW,EAEX,CAFW,EAGX,CAHW;AAHX,KA7BqB;AAsC7BG,cAAU;AACNZ,cAAMW,MADA;AAENT,eAAO,UAFD;AAGNO,uBAAe,CACX,CADW,EAEX,CAFW,EAGX,CAHW,EAIX,CAJW,EAKX,CALW,EAMX,CANW,EAOX,CAPW,EAQX,CARW,EASX,CATW,EAUX,EAVW;AAHT,KAtCmB;AAsD7BI,aAAS;AACLb,cAAMc,OADD;AAELZ,eAAO,SAFF;AAGLa,sBAAc,KAHT;AAILb,eAAO;AAJF,KAtDoB;AA4D7Bc,YAAQ;AACJhB,cAAMc,OADF;AAEJC,sBAAc,KAFV;AAGJZ,kBAAU,IAHN;AAIJc,kBAAU;AACNjB,kBAAM;AADA;AAJN,KA5DqB;AAoE7BkB,YAAQ;AACJlB,cAAMC,MADF;AAEJC,eAAO,QAFH;AAGJiB,mBAAW,YAAW;AAClB,mBAAO,KAAKzB,MAAZ;AACH,SALG;AAMJuB,kBAAU;AACNjB,kBAAM;AADA;AANN,KApEqB;AA8E7BoB,eAAW;AACPpB,cAAMqB,IADC;AAEPnB,eAAO,YAFA;AAGPiB,mBAAW,YAAW;AAClB,mBAAO,IAAIE,IAAJ,EAAP;AACH,SALM;AAMPJ,kBAAU;AACNjB,kBAAM;AADA;AANH;AA9EkB,CAAjB,CAAhB;AA4FAsB,OAAOC,OAAP,CAAe;AACdC,oBAAgB,UAASC,EAAT,EAAaC,YAAb,EAA0B;AACzCrC,gBAAQO,MAAR,CAAe6B,EAAf,EAAmB;AAClBE,kBAAM;AACLX,wBAAQ,CAACU;AADJ;AADY,SAAnB;AAKA,KAPa;AAQdE,kBAAc,UAASH,EAAT,EAAY;AACzBpC,gBAAQwC,MAAR,CAAeJ,EAAf;AACA;AAVa,CAAf;AAaApC,QAAQyC,YAAR,CAAqBzB,YAArB","file":"collections/recipes.js.map","sourcesContent":["Recipes = new Mongo.Collection('recipes');\n\nRecipes.allow({\n\tinsert: function(userId, doc) {\n\t\treturn !!userId;\n\t},\n\tupdate: function(userId, doc) {\n\t\treturn !!userId;\n\t}\n});\n\nPrice = new SimpleSchema({\n    desc: {\n        type: String,\n        label: \"Option\",\n        optional: true,\n    },\n    amount: {\n        label: \"Amount\",\n        type: String\n    }\n});\n\nRecipeSchema =  new SimpleSchema({\n    name: {\n        type: String,\n        label: \"Name\"\n    },\n    desc: {\n        type: String,\n        label: \"Description\"\n    },\n    price: {\n        type: String,\n        label: \"Price\",\n        \n    },\n    // Price: {\n    //     type: [Price]\n    // },\n    category: {\n        type: String,\n        label: \"Category\",\n        allowedValues: [\n            \"Island Cuisine\",\n            \"Caribbean Specialties\",\n            \"Special Burritos\",\n            \"Seafood Specialties\",\n            \"Specialties Salads & Side Orders\",\n            \"Beverages\"\n        ]\n    },\n    column: {\n        type: Number,\n        label: \"Column\",\n        allowedValues: [\n            1,\n            2,\n            3\n        ]\n    },\n    position: {\n        type: Number,\n        label: \"position\",\n        allowedValues: [\n            1,\n            2,\n            3,\n            4,\n            5,\n            6,\n            7,\n            8,\n            9,\n            10\n        ]\n    },\n    special: {\n        type: Boolean,\n        label: \"Special\",\n        defaultValue: false,\n        label: \"Special Item\"\n    },\n    inMenu: {\n        type: Boolean,\n        defaultValue: false,\n        optional: true,\n        autoform: {\n            type: \"hidden\"\n        }\n    },\n    author: {\n        type: String,\n        label: \"Author\",\n        autoValue: function() {\n            return this.userId;\n        },\n        autoform: {\n            type: \"hidden\"\n        }\n    },\n    createdAt: {\n        type: Date,\n        label: \"Created At\",\n        autoValue: function() {\n            return new Date();\n        },\n        autoform: {\n            type: \"hidden\"\n        }\n        \n    }\n});\n\n\nMeteor.methods({\n\ttoggleMenuItem: function(id, currentState){\n\t\tRecipes.update(id, {\n\t\t\t$set: {\n\t\t\t\tinMenu: !currentState\n\t\t\t}\n\t\t});\n\t},\n\tdeleteRecipe: function(id){\n\t\tRecipes.remove(id);\n\t}\n});\n\nRecipes.attachSchema(RecipeSchema);"]},"hash":"e9627aafd4f40a7e152948f423f751726555dcbd"}
